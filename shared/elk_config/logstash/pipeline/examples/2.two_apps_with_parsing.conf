input {
  beats {
    port => 5044
  }
}

filter {
    # Если лог пришел с тегом "legacy", парсим через grok
  if "legacy" in [tags] {
      grok {
         match => { "message" => "(?<timeRaw>\d{2}\/\d{2} \d{2}:\d{2}:\d{2}[AP]M '\d{2} [+-]\d{4}) \| %{LOGLEVEL:level} \| method: %{WORD:method} \| user: %{USERNAME:user} \| ip: %{IPV4:user_ip} \| message: %{GREEDYDATA:msg}" }
      }

    # Если лог пришел из с тэгом "backend", разбираем как JSON
  } else if "backend" in [tags] {
    json {
      source => "message"
    }

    # Если логи пришел без ожидаемого тега, реализуем какую-то отдельную логику
  } else {
    mutate {
      add_tag => ["failed to recognize condition"]
      # add_field => {"new_field", "any message"}
    }
  }
}

output {
  # Отправка логов в Elasticsearch
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    index => "logs-%{+YYYY.MM.dd}"
  }

  # Вывод логов в консоль
  stdout {
    codec => rubydebug  # Форматирование логов для удобного чтения
  }
}
